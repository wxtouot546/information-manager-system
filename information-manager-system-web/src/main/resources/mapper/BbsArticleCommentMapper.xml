<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xingkaichun.information.dao.BbsArticleCommentDao" >
  <sql id="BASE_TABLE">
    bbsarticlecomment
  </sql>

  <sql id="BASE_COLUMN">
    bbsArticleId,bbsArticleCommentId,parentBbsArticleCommentId,userId,toUserId,content,createTime,isSoftDelete,forBbsArticleCommentId
  </sql>

  <insert id="addBbsArticleComment" parameterType="com.xingkaichun.information.model.BbsArticleCommentDomain">
    INSERT INTO
      <include refid="BASE_TABLE"/>
      (<include refid="BASE_COLUMN"/>)
    VALUES(
      #{bbsArticleId, jdbcType=VARCHAR},
      #{bbsArticleCommentId, jdbcType=VARCHAR},
      #{parentBbsArticleCommentId, jdbcType=VARCHAR},
      #{userId, jdbcType=VARCHAR},
      #{toUserId, jdbcType=VARCHAR},
      #{content, jdbcType=VARCHAR},
      #{createTime, jdbcType=TIMESTAMP},
      false,
      #{forBbsArticleCommentId, jdbcType=VARCHAR}
    )
  </insert>


  <select id="querybbsArticleCommentBybbsArticleCommentId" parameterType="java.lang.String" resultType="com.xingkaichun.information.model.BbsArticleCommentDomain">
    SELECT
    <include refid="BASE_COLUMN"/>
    FROM
    <include refid="BASE_TABLE"/>
    where bbsArticleCommentId = #{_parameter, jdbcType=VARCHAR}
  </select>

  <select id="queryAllBbsArticleCommentBybbsArticleId" parameterType="java.lang.String" resultType="com.xingkaichun.information.model.BbsArticleCommentDomain">
    SELECT
    <include refid="BASE_COLUMN"/>
    FROM
    <include refid="BASE_TABLE"/>
    where bbsArticleId = #{bbsArticleId, jdbcType=VARCHAR}
  </select>

  <select id="queryNumberOfComment" resultType="java.lang.Integer">
    select count(*) from <include refid="BASE_TABLE"/>
    where bbsArticleId = #{bbsArticleId, jdbcType=VARCHAR}
  </select>

  <select id="queryBbsArticleCommentByUser" parameterType="com.xingkaichun.information.dto.BbsArticle.request.QueryBbsArticleCommentByUserRequest" resultType="com.xingkaichun.information.dto.BbsArticleComment.BbsArticleCommentDTOForHomeShowList">
    SELECT * from <include refid="BASE_TABLE"/>
    ORDER BY createTime DESC
  </select>

  <select id="queryBbsArticleCommentByBbsArticleId" parameterType="com.xingkaichun.information.dto.BbsArticle.request.QueryBbsArticleCommentByBbsArticleIdRequest" resultType="com.xingkaichun.information.dto.BbsArticleComment.BbsArticleCommentDTOForBbsShowList">
    SELECT bac.*,fromUser.userId as FromUserId,fromUser.userName as FromUserName from <include refid="BASE_TABLE"/> bac join
    user fromUser
    on bac.bbsArticleId = #{bbsArticleId, jdbcType=VARCHAR} and (bac.parentBbsArticleCommentId is null or bac.parentBbsArticleCommentId='') and bac.userId=fromUser.userId
    ORDER BY bac.createTime DESC
  </select>

  <select id="queryBbsArticleCommentByForBbsArticleCommentId" parameterType="com.xingkaichun.information.dto.BbsArticle.request.QueryBbsArticleCommentByForBbsArticleCommentIdRequest" resultType="com.xingkaichun.information.dto.BbsArticleComment.BbsArticleCommentDTOForBbsShowList">
    SELECT bac.*,fromUser.userId as FromUserId,fromUser.userName as FromUserName,toUser.userId as toUserId,toUser.userName as toUserName from <include refid="BASE_TABLE"/> bac
    join user fromUser
    on bac.forBbsArticleCommentId = #{forBbsArticleCommentId, jdbcType=VARCHAR} and bac.bbsArticleCommentId != bac.forBbsArticleCommentId and (bac.parentBbsArticleCommentId is not null and bac.parentBbsArticleCommentId != '') and bac.userId=fromUser.userId
    join user toUser
    on bac.userId=toUser.userId
    ORDER BY bac.createTime DESC
  </select>

  <select id="queryTwoUserBbsArticleComment" parameterType="com.xingkaichun.information.dto.BbsArticle.request.QueryTwoUserBbsArticleCommentRequest" resultType="com.xingkaichun.information.dto.BbsArticleComment.BbsArticleCommentDTOForBbsShowList">
    SELECT bac.*,fromUser.userId as FromUserId,fromUser.userName as FromUserName,toUser.userName as toUserName from bbsarticlecomment bac
    join user fromUser
    on bac.bbsArticleId = '1c36af8e-4b0a-4921-87f8-8116d5e47ed9'
    and (bac.userId = '18e35cf9-4b5e-489d-a72f-94dc677e651a' or bac.userId = '937739d9-906a-4bba-869e-f08df426daca')
    and (bac.toUserId = '18e35cf9-4b5e-489d-a72f-94dc677e651a' or bac.toUserId = '937739d9-906a-4bba-869e-f08df426daca')
    and bac.userId=fromUser.userId
    join user toUser
    on bac.toUserId=toUser.userId
    ORDER BY bac.createTime ASC
  </select>
</mapper>